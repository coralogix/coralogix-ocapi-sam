AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Coralgoix OCAPI - OrderSearch SAM app to send logs from Open Commerce to Coraloigx
Metadata:
  AWS::ServerlessRepo::Application:
    Name: Coralogix-ocapi
    Description: Get logs from Open Commerce OrderSearch and send them to Coralogix.
    Author: Coralogix
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    Labels:
      - coralogix
      - logs
      - ocapi
    HomePageUrl: https://coralogix.com
    SemanticVersion: 1.0.0
    SourceCodeUrl: "https://github.com/coralogix/coralogix-ocapi-sam"
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Coralogix Configuration
        Parameters:
          - CoralogixRegion
          - PrivateKey
          - ApplicationName
          - SubsystemName
      - Label:
          default: OCAPI Configuration
        Parameters:
          - OcapiEndpoint
          - OcapiUsername
          - OcapiPassword
          - SelectStatement
      - Label:
          default: Lambda Configuration
        Parameters:
          - FunctionArchitecture
          - FunctionMemorySize
          - FunctionTimeout
          - FunctionSchedule
          - NotificationEmail
      - Label:
          default: Script Configuration
        Parameters:
          - LogsToStdout
    ParameterLabels:
      CoralogixRegion:
        default: Region
      PrivateKey:
        default: Private Key
      ApplicationName:
        default: Application Name
      SubsystemName:
        default: Subsystem Name
      OcapiEndpoint:
        default: Full Endpoint
      OcapiUsername:
        default: Username
      OcapiPassword:
        default: Password
      SelectStatement:
        default: Select statement
      FunctionArchitecture:
        default: Architecture
      FunctionMemorySize:
        default: Memory
      FunctionTimeout:
        default: Timeout
      FunctionSchedule:
        default: Scheduler
      NotificationEmail:
        default: Notification Email
      LogsToStdout:
        default: Logs to stdout
Parameters:
  CoralogixRegion:
    Type: String
    Description: The Coralogix location region [Europe, Europe2, India, Singapore, US]
    AllowedValues:
      - Europe
      - Europe2
      - India
      - Singapore
      - US
    Default: Europe
  PrivateKey:
    Type: String
    Description: The Coralogix private key which is used to validate your authenticity
    AllowedPattern: '[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}'
    NoEcho: true
  ApplicationName:
    Type: String
    Description: The name of your application
    MinLength: 1
    MaxLength: 64
  SubsystemName:
    Type: String
    Description: The subsystem name of your application
    MinLength: 1
    MaxLength: 64
  OcapiEndpoint:
    Type: String
    Description: The full endpoint to the orderSearch api
  OcapiUsername:
    Type: String
    Description: The OCAPI Username for authentication
    NoEcho: true
  OcapiPassword:
    Type: String
    Description: The OCAPI Password for authentication
    NoEcho: true
  SelectStatement:
    Type: String
    Description: The select statement to use when querying the api.
  FunctionArchitecture:
    Type: String
    Description: Lambda function architecture [x86_64, arm64]
    AllowedValues:
      - x86_64
      - arm64
    Default: x86_64
  FunctionMemorySize:
    Type: Number
    Description: Lambda function memory limit
    MinValue: 128
    MaxValue: 10240
    Default: 1024
  FunctionTimeout:
    Type: Number
    Description: Lambda function timeout limit
    MinValue: 30
    MaxValue: 900
    Default: 300
  FunctionSchedule:
    Type: Number
    Description: Lambda function schedule in minutes
    MinValue: 2
    MaxValue: 1440
    Default: 10
  NotificationEmail:
    Type: String
    Description: Failure notification email address
    MaxLength: 320
    Default: ''
  LogsToStdout:
    Type: String
    Description: Send logs to stdout/cloudwatch [True,False]
    AllowedValues:
      - "True"
      - "False"
    Default: "True"
Mappings:
  CoralogixRegionMap:
    Europe:
      LogUrl: https://api.coralogix.com/api/v1/logs
    Europe2:
      LogUrl: https://api.eu2.coralogix.com/api/v1/logs
    India:
      LogUrl: https://api.app.coralogix.in/api/v1/logs
    Singapore:
      LogUrl: https://api.coralogixsg.com/api/v1/logs
    US:
      LogUrl: https://api.coralogix.us/api/v1/logs
Conditions:
  ShouldCreateResource: !Not 
    - !Equals
      - !Ref NotificationEmail
      - ''
Resources:
  DynamoDB:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey: 
        Name: lastUpdate
        Type: String
  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Send logs from Open Commerce Search order API to Coralogix.
      CodeUri: ocapi/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - Ref: FunctionArchitecture
      MemorySize:
        Ref: FunctionMemorySize
      Timeout:
        Ref: FunctionTimeout
      Environment:
        Variables:
          CORALOGIX_LOG_URL:
            Fn::FindInMap:
              - CoralogixRegionMap
              - Ref: CoralogixRegion
              - LogUrl
          CORALOGIX_PRIVATE_KEY:
            Ref: PrivateKey
          CORALOGIX_APPLICATION_NAME:
            Ref: ApplicationName
          CORALOGIX_SUBSYSTEM_NAME:
            Ref: SubsystemName
          DYNAMODB_TABLE:
            Ref: DynamoDB
          OCAPI_ENDPOINT:
            Ref: OcapiEndpoint
          OCAPI_USERNAME:
            Ref: OcapiUsername
          OCAPI_PASSWORD:
            Ref: OcapiPassword
          SELECT_STATEMENT:
            Ref: SelectStatement
          LOGS_TO_STDOUT:
            Ref: LogsToStdout
      EventInvokeConfig:
        DestinationConfig:
          OnFailure:
            Type: SNS
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: DynamoDB
      Events:
        CWSchedule:
          Type: Schedule
          Properties:
            Schedule:
              Fn::Sub:
                - 'rate(${FunctionSchedule} minutes)'
                - FunctionSchedule: !Ref FunctionSchedule
            Description: The Lambda schedule in minutes.
            Enabled: true
  LambdaFunctionNotificationSubscription:
    Type: AWS::SNS::Subscription
    Condition: ShouldCreateResource
    Properties:
      Protocol: email
      Endpoint:
        Ref: NotificationEmail
      TopicArn:
        Ref: LambdaFunction.DestinationTopic